/*
 * Copyright 2020 :Karunia Awal Ramadhan <ayuwokibyytess@gmail.com>.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package com.pointofsales.swing.transaction.sales;

import com.pointofsales.config.aom.Characters;
import com.pointofsales.config.controller.Printable;
import com.pointofsales.config.database.ConfigDB;
import com.pointofsales.swing.transaction.SelectCashier;
import com.pointofsales.swing.transaction.SelectCustomers;
import com.pointofsales.swing.transaction.SelectProduct;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyEvent;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Time;
import java.text.DateFormat;
import java.text.DecimalFormat;
import java.text.DecimalFormatSymbols;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.Timer;
import javax.swing.table.DefaultTableModel;

/**
 * @author :Karunia Awal Ramadhan <ayuwokibyytess@gmail.com>
 */
public class FSales extends javax.swing.JDialog {

    /**
     * Creates new form FTransaction
     *
     * @param parent
     * @param modal
     */
    public FSales(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        conn = new ConfigDB().getConnection();
        openForms();
    }

    private Connection conn;
    private PreparedStatement pst;
    private ResultSet rs;
    private DecimalFormat decimalFormat;
    private DecimalFormatSymbols dfs;
    private int discID, custID;
    public int empID;
    private String unitItem, itemID;
    private final Date date = new Date();
    private final SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        txtKasir = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtNoStruk = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<String>();
        jXDatePicker1 = new org.jdesktop.swingx.JXDatePicker();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        txtSubtotal = new javax.swing.JTextField();
        jPanel5 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        txtIdCust = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        txtNamaCust = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        txtKontakCust = new javax.swing.JTextField();
        jButton3 = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        jLabel14 = new javax.swing.JLabel();
        txtIdBarang = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        txtNamaBarang = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        txtStok = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        txtQty = new javax.swing.JTextField();
        txtDiscPersen = new javax.swing.JTextField();
        txtHargaJual = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        txtHasilDiskon = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        jButton7 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        jButton10 = new javax.swing.JButton();
        jButton11 = new javax.swing.JButton();
        jButton12 = new javax.swing.JButton();
        jButton13 = new javax.swing.JButton();
        jButton14 = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        txtUangTunai = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);
        addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                formKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                formKeyReleased(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel1.setName("jPanel1"); // NOI18N

        jLabel2.setFont(new java.awt.Font("Liberation Sans", 0, 18)); // NOI18N
        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/resources/icon/icons8-buying-30.png"))); // NOI18N
        jLabel2.setText("Menu Transaksi Penjualan Barang");
        jLabel2.setName("jLabel2"); // NOI18N

        jLabel3.setFont(new java.awt.Font("Liberation Sans", 0, 14)); // NOI18N
        jLabel3.setName("jLabel3"); // NOI18N

        jLabel1.setFont(new java.awt.Font("Liberation Sans", 0, 18)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel1.setName("jLabel1"); // NOI18N

        org.jdesktop.layout.GroupLayout jPanel1Layout = new org.jdesktop.layout.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .add(jLabel2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 423, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jLabel3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 113, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 519, Short.MAX_VALUE)
                .add(jLabel1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 214, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jLabel2, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .add(jLabel3, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, jLabel1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Detail Penjualan", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 0, 14))); // NOI18N
        jPanel4.setName("jPanel4"); // NOI18N

        jLabel4.setFont(new java.awt.Font("Liberation Sans", 0, 14)); // NOI18N
        jLabel4.setText("Kasir :");
        jLabel4.setName("jLabel4"); // NOI18N

        txtKasir.setEditable(false);
        txtKasir.setFont(new java.awt.Font("Liberation Sans", 0, 14)); // NOI18N
        txtKasir.setName("txtKasir"); // NOI18N

        jLabel5.setFont(new java.awt.Font("Liberation Sans", 0, 14)); // NOI18N
        jLabel5.setText("No. Struk :");
        jLabel5.setName("jLabel5"); // NOI18N

        txtNoStruk.setEditable(false);
        txtNoStruk.setFont(new java.awt.Font("Liberation Sans", 0, 14)); // NOI18N
        txtNoStruk.setName("txtNoStruk"); // NOI18N

        jLabel6.setFont(new java.awt.Font("Liberation Sans", 0, 14)); // NOI18N
        jLabel6.setText("Tgl. Jual :");
        jLabel6.setName("jLabel6"); // NOI18N

        jComboBox1.setFont(new java.awt.Font("Liberation Sans", 0, 14)); // NOI18N
        jComboBox1.setMaximumRowCount(5);
        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Tunai", "Kredit" }));
        jComboBox1.setName("jComboBox1"); // NOI18N

        jXDatePicker1.setName("jXDatePicker1"); // NOI18N

        org.jdesktop.layout.GroupLayout jPanel4Layout = new org.jdesktop.layout.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jLabel4)
                    .add(jLabel5)
                    .add(jLabel6))
                .add(18, 18, Short.MAX_VALUE)
                .add(jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                    .add(txtKasir, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 250, Short.MAX_VALUE)
                    .add(jPanel4Layout.createSequentialGroup()
                        .add(txtNoStruk, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 83, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jComboBox1, 0, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .add(jXDatePicker1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .add(546, 546, 546))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel4)
                    .add(txtKasir, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(6, 6, 6)
                .add(jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel5)
                    .add(txtNoStruk, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jComboBox1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel6)
                    .add(jXDatePicker1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(15, Short.MAX_VALUE))
        );

        jScrollPane1.setName("jScrollPane1"); // NOI18N

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID. Barang", "Nama", "Jumlah", "Satuan", "Harga Jual", "Diskon", "Total"
            }
        ));
        jTable1.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        jTable1.setName("jTable1"); // NOI18N
        jTable1.getTableHeader().setReorderingAllowed(false);
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Subtotal", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 0, 14))); // NOI18N
        jPanel2.setName("jPanel2"); // NOI18N

        txtSubtotal.setEditable(false);
        txtSubtotal.setFont(new java.awt.Font("Liberation Sans", 0, 14)); // NOI18N
        txtSubtotal.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtSubtotal.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        txtSubtotal.setName("txtSubtotal"); // NOI18N

        org.jdesktop.layout.GroupLayout jPanel2Layout = new org.jdesktop.layout.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .add(txtSubtotal)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .add(txtSubtotal)
                .addContainerGap())
        );

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Data Pelanggan", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 0, 14))); // NOI18N
        jPanel5.setName("jPanel5"); // NOI18N

        jLabel7.setFont(new java.awt.Font("Liberation Sans", 0, 14)); // NOI18N
        jLabel7.setText("ID. Pelg. :");
        jLabel7.setName("jLabel7"); // NOI18N

        txtIdCust.setEditable(false);
        txtIdCust.setFont(new java.awt.Font("Liberation Sans", 0, 14)); // NOI18N
        txtIdCust.setName("txtIdCust"); // NOI18N

        jLabel9.setFont(new java.awt.Font("Liberation Sans", 0, 14)); // NOI18N
        jLabel9.setText("Nama :");
        jLabel9.setName("jLabel9"); // NOI18N

        txtNamaCust.setEditable(false);
        txtNamaCust.setFont(new java.awt.Font("Liberation Sans", 0, 14)); // NOI18N
        txtNamaCust.setName("txtNamaCust"); // NOI18N

        jLabel11.setFont(new java.awt.Font("Liberation Sans", 0, 14)); // NOI18N
        jLabel11.setText("Kontak :");
        jLabel11.setName("jLabel11"); // NOI18N

        txtKontakCust.setEditable(false);
        txtKontakCust.setFont(new java.awt.Font("Liberation Sans", 0, 14)); // NOI18N
        txtKontakCust.setName("txtKontakCust"); // NOI18N

        jButton3.setFont(new java.awt.Font("Liberation Sans", 0, 14)); // NOI18N
        jButton3.setText("Cari");
        jButton3.setName("jButton3"); // NOI18N
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout jPanel5Layout = new org.jdesktop.layout.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel5Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jLabel7)
                    .add(jLabel9)
                    .add(jLabel11))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .add(jPanel5Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, txtNamaCust)
                    .add(jPanel5Layout.createSequentialGroup()
                        .add(txtIdCust, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 173, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                        .add(jButton3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 61, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(txtKontakCust))
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel5Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel7)
                    .add(txtIdCust, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jButton3))
                .add(6, 6, 6)
                .add(jPanel5Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel9)
                    .add(txtNamaCust, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel5Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel11)
                    .add(txtKontakCust, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Detail Barang", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 0, 14))); // NOI18N
        jPanel6.setName("jPanel6"); // NOI18N

        jLabel14.setFont(new java.awt.Font("Liberation Sans", 0, 14)); // NOI18N
        jLabel14.setText("ID. Barang :");
        jLabel14.setName("jLabel14"); // NOI18N

        txtIdBarang.setEditable(false);
        txtIdBarang.setFont(new java.awt.Font("Liberation Sans", 0, 14)); // NOI18N
        txtIdBarang.setName("txtIdBarang"); // NOI18N

        jLabel15.setFont(new java.awt.Font("Liberation Sans", 0, 14)); // NOI18N
        jLabel15.setText("Nama :");
        jLabel15.setName("jLabel15"); // NOI18N

        txtNamaBarang.setEditable(false);
        txtNamaBarang.setFont(new java.awt.Font("Liberation Sans", 0, 14)); // NOI18N
        txtNamaBarang.setName("txtNamaBarang"); // NOI18N
        txtNamaBarang.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNamaBarangActionPerformed(evt);
            }
        });

        jLabel16.setFont(new java.awt.Font("Liberation Sans", 0, 14)); // NOI18N
        jLabel16.setText("Stok :");
        jLabel16.setName("jLabel16"); // NOI18N

        txtStok.setEditable(false);
        txtStok.setFont(new java.awt.Font("Liberation Sans", 0, 14)); // NOI18N
        txtStok.setName("txtStok"); // NOI18N

        jButton1.setFont(new java.awt.Font("Liberation Sans", 0, 14)); // NOI18N
        jButton1.setText("Cari");
        jButton1.setName("jButton1"); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel17.setFont(new java.awt.Font("Liberation Sans", 0, 14)); // NOI18N
        jLabel17.setText("Harga Jual :");
        jLabel17.setName("jLabel17"); // NOI18N

        jLabel18.setFont(new java.awt.Font("Liberation Sans", 0, 14)); // NOI18N
        jLabel18.setText("Diskon :");
        jLabel18.setName("jLabel18"); // NOI18N

        jLabel19.setFont(new java.awt.Font("Liberation Sans", 0, 14)); // NOI18N
        jLabel19.setText("Quantity :");
        jLabel19.setName("jLabel19"); // NOI18N

        txtQty.setFont(new java.awt.Font("Liberation Sans", 0, 14)); // NOI18N
        txtQty.setName("txtQty"); // NOI18N
        txtQty.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtQtyKeyTyped(evt);
            }
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtQtyKeyPressed(evt);
            }
        });

        txtDiscPersen.setFont(new java.awt.Font("Liberation Sans", 0, 14)); // NOI18N
        txtDiscPersen.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtDiscPersen.setName("txtDiscPersen"); // NOI18N
        txtDiscPersen.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtDiscPersenKeyReleased(evt);
            }
        });

        txtHargaJual.setEditable(false);
        txtHargaJual.setFont(new java.awt.Font("Liberation Sans", 0, 14)); // NOI18N
        txtHargaJual.setName("txtHargaJual"); // NOI18N

        jButton2.setFont(new java.awt.Font("Liberation Sans", 0, 14)); // NOI18N
        jButton2.setText("Ok");
        jButton2.setName("jButton2"); // NOI18N
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        txtHasilDiskon.setEditable(false);
        txtHasilDiskon.setFont(new java.awt.Font("Liberation Sans", 0, 14)); // NOI18N
        txtHasilDiskon.setName("txtHasilDiskon"); // NOI18N
        txtHasilDiskon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtHasilDiskonActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout jPanel6Layout = new org.jdesktop.layout.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel6Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jLabel14)
                    .add(jLabel15)
                    .add(jLabel16))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel6Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(txtStok)
                    .add(txtNamaBarang)
                    .add(jPanel6Layout.createSequentialGroup()
                        .add(txtIdBarang)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jButton1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 66, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(jPanel6Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jLabel18)
                    .add(jLabel17)
                    .add(jLabel19))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(jPanel6Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel6Layout.createSequentialGroup()
                        .add(txtQty)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jButton2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 68, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(jPanel6Layout.createSequentialGroup()
                        .add(txtDiscPersen, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 47, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(txtHasilDiskon))
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, txtHargaJual, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 204, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel6Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel14)
                    .add(txtIdBarang, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jButton1)
                    .add(jLabel17)
                    .add(txtHargaJual, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(6, 6, 6)
                .add(jPanel6Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel15)
                    .add(txtNamaBarang, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabel18)
                    .add(txtDiscPersen, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(txtHasilDiskon, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel6Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel16)
                    .add(txtStok, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabel19)
                    .add(txtQty, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jButton2))
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel3.setName("jPanel3"); // NOI18N

        jButton7.setFont(new java.awt.Font("Liberation Sans", 0, 17)); // NOI18N
        jButton7.setText("Keluar");
        jButton7.setName("jButton7"); // NOI18N
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        jButton8.setFont(new java.awt.Font("Liberation Sans", 0, 17)); // NOI18N
        jButton8.setText("Log-out");
        jButton8.setName("jButton8"); // NOI18N
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        jButton10.setFont(new java.awt.Font("Liberation Sans", 0, 17)); // NOI18N
        jButton10.setText("Print");
        jButton10.setName("jButton10"); // NOI18N
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });

        jButton11.setFont(new java.awt.Font("Liberation Sans", 0, 17)); // NOI18N
        jButton11.setText("+");
        jButton11.setName("jButton11"); // NOI18N
        jButton11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton11ActionPerformed(evt);
            }
        });

        jButton12.setFont(new java.awt.Font("Liberation Sans", 0, 17)); // NOI18N
        jButton12.setText("-");
        jButton12.setName("jButton12"); // NOI18N
        jButton12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton12ActionPerformed(evt);
            }
        });

        jButton13.setFont(new java.awt.Font("Liberation Sans", 0, 17)); // NOI18N
        jButton13.setText("X");
        jButton13.setName("jButton13"); // NOI18N
        jButton13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton13ActionPerformed(evt);
            }
        });

        jButton14.setFont(new java.awt.Font("Liberation Sans", 0, 17)); // NOI18N
        jButton14.setText("=");
        jButton14.setName("jButton14"); // NOI18N
        jButton14.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton14ActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout jPanel3Layout = new org.jdesktop.layout.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel3Layout.createSequentialGroup()
                .add(jButton11, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 40, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jButton12, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 40, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jButton13, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 40, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jButton14, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 40, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .add(jButton10, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 85, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jButton8, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 85, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jButton7, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 85, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                .add(jButton7, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .add(jButton8, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .add(jButton10, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .add(jButton11, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .add(jButton12, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .add(jButton13, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .add(jButton14, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jButton9.setFont(new java.awt.Font("Liberation Sans", 0, 20)); // NOI18N
        jButton9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/resources/icon/icons8-bill-48.png"))); // NOI18N
        jButton9.setText("Bayar ");
        jButton9.setName("jButton9"); // NOI18N
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });

        jButton5.setFont(new java.awt.Font("Liberation Sans", 0, 20)); // NOI18N
        jButton5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/resources/icon/icons8-synchronize-48.png"))); // NOI18N
        jButton5.setText("Baru ");
        jButton5.setName("jButton5"); // NOI18N
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        txtUangTunai.setFont(new java.awt.Font("Liberation Sans", 0, 14)); // NOI18N
        txtUangTunai.setName("txtUangTunai"); // NOI18N
        txtUangTunai.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                txtUangTunaiMousePressed(evt);
            }
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtUangTunaiMouseClicked(evt);
            }
        });
        txtUangTunai.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtUangTunaiKeyTyped(evt);
            }
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtUangTunaiKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtUangTunaiKeyReleased(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Liberation Sans", 0, 36)); // NOI18N
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel8.setText("Rp.");
        jLabel8.setToolTipText("");
        jLabel8.setName("jLabel8"); // NOI18N

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel3, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .add(jPanel1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(jScrollPane1)
                    .add(layout.createSequentialGroup()
                        .add(jLabel8, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 67, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(3, 3, 3)
                        .add(txtUangTunai, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 371, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .add(jButton9)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jButton5))
                    .add(org.jdesktop.layout.GroupLayout.LEADING, layout.createSequentialGroup()
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                            .add(jPanel4, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 366, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(jPanel5, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jPanel2, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .add(jPanel6, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(jPanel1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                    .add(jPanel4, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(jPanel2, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                    .add(jPanel6, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(jPanel5, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jScrollPane1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 229, Short.MAX_VALUE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING, false)
                    .add(org.jdesktop.layout.GroupLayout.LEADING, layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                        .add(jButton5, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .add(jButton9))
                    .add(txtUangTunai, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .add(jLabel8, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 55, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        openForms();
        jButton9.setEnabled(true);
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        this.setVisible(false);
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        authPayment();
    }//GEN-LAST:event_jButton9ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        try {
            SelectProduct sp = new SelectProduct(null, true);
            sp.setVisible(true);
            int b = sp.jTable1.getSelectedRow();
            txtIdBarang.setText((String) sp.jTable1.getValueAt(b, 0));
            txtNamaBarang.setText((String) sp.jTable1.getValueAt(b, 2));
            txtHargaJual.setText((String) sp.jTable1.getValueAt(b, 3));
            txtStok.setText((String) sp.jTable1.getValueAt(b, 6));
            txtDiscPersen.setText("0");
            satuan = (String) sp.jTable1.getValueAt(b, 7);
            txtQty.requestFocus();
            sp.dispose();
        } catch (ArrayIndexOutOfBoundsException ex) {
            //JOptionPane.showMessageDialog(null, "Terjadi Error :\n"+ex.toString(),"Kesalahan",JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        selectCustomers();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        insertDataIntoTable();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void txtUangTunaiKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtUangTunaiKeyTyped
        Characters.setDontWriteCharactersExceptNumber(evt);
    }//GEN-LAST:event_txtUangTunaiKeyTyped

    private void txtDiscPersenKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtDiscPersenKeyReleased
        //discountCalculate();
    }//GEN-LAST:event_txtDiscPersenKeyReleased

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        logOut();
    }//GEN-LAST:event_jButton8ActionPerformed

    private void formKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_formKeyPressed
        switch (evt.getKeyCode()) {
            case KeyEvent.VK_F1:
                authPayment();
                break;
            case KeyEvent.VK_F2:
                openForms();
                break;
            case KeyEvent.VK_F5:
                logOut();
                break;
            case KeyEvent.VK_ESCAPE:
                this.dispose();
                break;
            default:
                break;
        }
    }//GEN-LAST:event_formKeyPressed

    private void formKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_formKeyReleased

    }//GEN-LAST:event_formKeyReleased

    private void txtUangTunaiMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtUangTunaiMouseClicked

    }//GEN-LAST:event_txtUangTunaiMouseClicked

    private void txtUangTunaiMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtUangTunaiMousePressed
        if (evt.getClickCount() == 2) {
            calculatePayment();
        }
    }//GEN-LAST:event_txtUangTunaiMousePressed

    private void txtQtyKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtQtyKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_DOWN) {
            insertDataIntoTable();
        }
    }//GEN-LAST:event_txtQtyKeyPressed

    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
        if (txtUangTunai.getText().equalsIgnoreCase("Rp. 0.00") | txtUangTunai.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Transaksi Tidak Ada\n"
                    + "Bukti Pembayaran Mungkin Tidak Dapat Ditampilkan");
        } else {
            printInvoices();
        }
    }//GEN-LAST:event_jButton10ActionPerformed

    private void txtUangTunaiKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtUangTunaiKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_DOWN) {
            calculatePayment();
        }
    }//GEN-LAST:event_txtUangTunaiKeyPressed

    private void txtUangTunaiKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtUangTunaiKeyReleased
        int a = getMoneyCash(), b = getSubtotal();
        getReturnPayment(a, b);
        System.out.println("" + getReturnPayment(a, b));
    }//GEN-LAST:event_txtUangTunaiKeyReleased

    private void jButton11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton11ActionPerformed
        plusOption();
    }//GEN-LAST:event_jButton11ActionPerformed

    private void jButton12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton12ActionPerformed
        plusOption();
    }//GEN-LAST:event_jButton12ActionPerformed

    private void jButton13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton13ActionPerformed
        cancelOption();
    }//GEN-LAST:event_jButton13ActionPerformed

    private void jButton14ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton14ActionPerformed
        calculatePayment();
    }//GEN-LAST:event_jButton14ActionPerformed

    private void txtQtyKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtQtyKeyTyped
        Characters.setDontWriteCharactersExceptNumber(evt);
    }//GEN-LAST:event_txtQtyKeyTyped

    private void txtHasilDiskonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtHasilDiskonActionPerformed

    }//GEN-LAST:event_txtHasilDiskonActionPerformed

    private void txtNamaBarangActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNamaBarangActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNamaBarangActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        if (javax.swing.SwingUtilities.isRightMouseButton(evt)) {
            int question = JOptionPane.showConfirmDialog(null, "Batalkan..?", "Perhatian", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
            if (question == JOptionPane.YES_OPTION) {
                cancelOption();
            }
        }
    }//GEN-LAST:event_jTable1MouseClicked

    // Variables declaration - do not modify//GEN-BEGIN:variables
    protected javax.swing.JButton jButton1;
    protected javax.swing.JButton jButton10;
    protected javax.swing.JButton jButton11;
    protected javax.swing.JButton jButton12;
    protected javax.swing.JButton jButton13;
    protected javax.swing.JButton jButton14;
    protected javax.swing.JButton jButton2;
    protected javax.swing.JButton jButton3;
    protected javax.swing.JButton jButton5;
    protected javax.swing.JButton jButton7;
    protected javax.swing.JButton jButton8;
    protected javax.swing.JButton jButton9;
    protected javax.swing.JComboBox<String> jComboBox1;
    protected javax.swing.JLabel jLabel1;
    protected javax.swing.JLabel jLabel11;
    protected javax.swing.JLabel jLabel14;
    protected javax.swing.JLabel jLabel15;
    protected javax.swing.JLabel jLabel16;
    protected javax.swing.JLabel jLabel17;
    protected javax.swing.JLabel jLabel18;
    protected javax.swing.JLabel jLabel19;
    protected javax.swing.JLabel jLabel2;
    protected javax.swing.JLabel jLabel3;
    protected javax.swing.JLabel jLabel4;
    protected javax.swing.JLabel jLabel5;
    protected javax.swing.JLabel jLabel6;
    protected javax.swing.JLabel jLabel7;
    protected javax.swing.JLabel jLabel8;
    protected javax.swing.JLabel jLabel9;
    protected javax.swing.JPanel jPanel1;
    protected javax.swing.JPanel jPanel2;
    protected javax.swing.JPanel jPanel3;
    protected javax.swing.JPanel jPanel4;
    protected javax.swing.JPanel jPanel5;
    protected javax.swing.JPanel jPanel6;
    protected javax.swing.JScrollPane jScrollPane1;
    protected javax.swing.JTable jTable1;
    private org.jdesktop.swingx.JXDatePicker jXDatePicker1;
    protected javax.swing.JTextField txtDiscPersen;
    protected javax.swing.JTextField txtHargaJual;
    protected javax.swing.JTextField txtHasilDiskon;
    protected javax.swing.JTextField txtIdBarang;
    protected javax.swing.JTextField txtIdCust;
    public javax.swing.JTextField txtKasir;
    protected javax.swing.JTextField txtKontakCust;
    protected javax.swing.JTextField txtNamaBarang;
    protected javax.swing.JTextField txtNamaCust;
    protected javax.swing.JTextField txtNoStruk;
    protected javax.swing.JTextField txtQty;
    protected javax.swing.JTextField txtStok;
    protected javax.swing.JTextField txtSubtotal;
    protected javax.swing.JTextField txtUangTunai;
    // End of variables declaration//GEN-END:variables

    private void createColumnsOnTable() {
        jTable1.setModel(new DefaultTableModel(null, new String[]{"ID", "Nama Barang", "Qty", "Satuan", "Harga Jual", "Diskon", "Total"}));
        tableRenderer();
        timerStart();
        decimalFormat();
    }

    private final int diskon = 0;

    /**
     * Method ini digunakan untuk me-load form seperti semula, Mengosongkan
     * TeksField Setting font pada TeksField
     *
     */
    private void openForms() {
        conn = new ConfigDB().autoReconnect();
        createColumnsOnTable();
        txtSubtotal.setEditable(false);
        txtSubtotal.setText("0.00");
        txtUangTunai.setText("");
        txtIdBarang.setText("");
        txtNamaBarang.setText("");
        txtStok.setText("");
        txtDiscPersen.setText("");
        txtHargaJual.setText("");
        txtHasilDiskon.setText("");
        txtQty.setText("");
        txtUangTunai.setFont(new java.awt.Font("Liberation Sans", 0, 50));
        jXDatePicker1.setFont(new java.awt.Font("Liberation Sans", 0, 14));
        txtSubtotal.setFont(new java.awt.Font("Liberation Sans", 0, 75));
        jXDatePicker1.setDate(date);
        jPanel3.setSize(281, 20);
        txtNoStruk.setText("" + getBillNumber());
    }

    /**
     * Merender Tabel, Setting Lebar dan Panjang Kolom, Setting Font
     *
     */
    private void tableRenderer() {
        jTable1.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_ALL_COLUMNS);
        jTable1.setFont(new java.awt.Font("Liberation Sans", 0, 15));
        jTable1.getTableHeader().setSize(20, 30);
        jTable1.setRowHeight(23);
        jTable1.getTableHeader().setFont(new java.awt.Font("Liberation Sans", 0, 15));
        jTable1.getColumnModel().getColumn(0).setPreferredWidth(50);
        jTable1.getColumnModel().getColumn(1).setPreferredWidth(400);
        jTable1.getColumnModel().getColumn(2).setPreferredWidth(50);
        jTable1.getColumnModel().getColumn(3).setPreferredWidth(90);
        jTable1.getColumnModel().getColumn(4).setPreferredWidth(100);
        jTable1.getColumnModel().getColumn(5).setPreferredWidth(100);
        jTable1.getColumnModel().getColumn(6).setPreferredWidth(289);
        jTable1.getColumnModel().getColumn(0).setResizable(false);
        jTable1.getColumnModel().getColumn(1).setResizable(false);
        jTable1.getColumnModel().getColumn(2).setResizable(false);
        jTable1.getColumnModel().getColumn(3).setResizable(false);
        jTable1.getColumnModel().getColumn(4).setResizable(false);
        jTable1.getColumnModel().getColumn(5).setResizable(false);
        jTable1.getColumnModel().getColumn(6).setResizable(false);
    }

    String satuan = null;

    private void insertDataIntoTable() {
        if (txtIdBarang.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Barang Tidak Ada..\nSilakan Klik Tombol Cari Dan Pilih Barang Pada Tabel");
            jButton1.requestFocus();
        } else if (txtQty.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Silakan Isi Jumlah Barang Yang Akan Dibeli");
            jButton2.requestFocus();
        } else {
            DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
            if (Integer.parseInt(txtStok.getText()) < Integer.parseInt(txtQty.getText())) {
                JOptionPane.showMessageDialog(null, "Maaf, Stok Barang Tidak Mencukupi...", "Perhatian", JOptionPane.WARNING_MESSAGE);
            } else {
                int a = Integer.parseInt(txtHargaJual.getText()), b = Integer.parseInt(txtQty.getText());
                model.addRow(new Object[]{txtIdBarang.getText(), txtNamaBarang.getText(), Integer.parseInt(txtQty.getText()), satuan, Integer.parseInt(txtHargaJual.getText()),
                    txtDiscPersen.getText(), getCountPrice(a, b)});
                clearField();
            }
        }
    }

    /**
     * Mensetting Format Desimal
     */
    private void decimalFormat() {
        decimalFormat = (DecimalFormat) DecimalFormat.getCurrencyInstance();
        dfs = new DecimalFormatSymbols();
        dfs.setCurrencySymbol("");
        decimalFormat.setDecimalFormatSymbols(dfs);
    }

    /**
     * Mendapatkan Hasil Subtotal, Terjadi Eksepsi Jika Nilai Null
     *
     * @return
     */
    private int getSubtotal() {
        int subTotal = 0;
        for (int i = 0; i < jTable1.getRowCount(); i++) {
            subTotal = subTotal + Integer.parseInt(jTable1.getValueAt(i, 6).toString());
        }
        return subTotal;
    }

    private int getMoneyCash() {
        return Integer.parseInt(txtUangTunai.getText());
    }

    private int getCountPrice(int price, int qty) {
        return price * qty;
    }

    /**
     * Menyimpan Data Umum Penjualan, Seperti Nomor Struk, Tanggal & Jam, Dll
     */
    private void saveDataPayment() {
        try {
            int a = getMoneyCash(), b = getSubtotal();
            Time sqlTimes = new Time(date.getTime());
            SimpleDateFormat cal = new SimpleDateFormat("yyyy-MM-dd");
            // Insert And Update Common Transactions Values into Table
            String sql = "INSERT INTO Sales (SaleID,SaleDate,Time,EmpID,CustID,Freight,DiscID,MTotal,MCash,MReturn) VALUES (?,?,?,?,?,?,?,?,?,?)";
            pst = conn.prepareStatement(sql);
            pst.setString(1, txtNoStruk.getText());
            pst.setString(2, cal.format(jXDatePicker1.getDate()));
            pst.setTime(3, sqlTimes);
            pst.setInt(4, empID);
            pst.setInt(5, custID);
            pst.setInt(6, getItemFreight());
            pst.setInt(7, diskon);
            pst.setInt(8, getSubtotal());
            pst.setInt(9, getMoneyCash());
            pst.setInt(10, getReturnPayment(a, b));
            pst.executeUpdate();
            insertDataDetailPayment();
            updateItemStockWhenTransactionSuccess();
            JOptionPane.showMessageDialog(null, "Selamat, Transaksi Penjualan Berhasil...", "Informasi", JOptionPane.INFORMATION_MESSAGE);
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Terjadi Error Pada:\n" + ex.toString(), "Kesalahan", JOptionPane.ERROR_MESSAGE);
        }
    }

    /**
     * Menyimpan Data Detail Penjualan
     */
    private void insertDataDetailPayment() {
        try {
            String sql = "INSERT INTO SalesDetail (SaleID, ProductID, Qty, Total) VALUES (?,?,?,?)";
            pst = conn.prepareStatement(sql);
            for (int i = 0; i < jTable1.getRowCount(); i++) {
                pst.setInt(1, Integer.parseInt(txtNoStruk.getText()));
                pst.setString(2, (String) jTable1.getValueAt(i, 0));
                pst.setInt(3, Integer.parseInt(jTable1.getValueAt(i, 2).toString()));
                pst.setInt(4, Integer.parseInt(jTable1.getValueAt(i, 6).toString()));
                pst.executeUpdate();
            }
            pst.addBatch();
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Terjadi Error Pada:\n" + ex.toString(), "Kesalahan", JOptionPane.ERROR_MESSAGE);
        }
    }

    /**
     * Digunakan Untuk Mengubah Stok Barang Apabila Penjualan Berhasil Terpicu.
     */
    private void updateItemStockWhenTransactionSuccess() {
        try {
            String sql = "UPDATE Products SET Stock = Stock - ? WHERE ProductID = ?";
            pst = conn.prepareStatement(sql);
            for (int i = 0; i < jTable1.getRowCount(); i++) {
                pst.setInt(1, Integer.parseInt(jTable1.getValueAt(i, 2).toString()));
                pst.setString(2, jTable1.getValueAt(i, 0).toString());
                pst.executeUpdate();
            }
            pst.addBatch();
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Terjadi Error Pada:\n" + ex.toString(), "Kesalahan", JOptionPane.ERROR_MESSAGE);
        }
    }

    /**
     * Membuat Autonumber
     *
     * @return
     */
    private int getBillNumber() {
        int billNumber = 1;
        try {
            pst = conn.prepareStatement("SELECT MAX(SaleID) FROM Sales");
            rs = pst.executeQuery();
            if (rs.next()) {
                billNumber = rs.getInt(1) + 1;
            }
            rs.close();
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Terjadi Error Pada:\n" + ex.toString(), "Kesalahan", JOptionPane.ERROR_MESSAGE);
        }
        return billNumber;
    }

    /**
     * Untuk Mendapatkan Uang Kembali Ketika Uang Tunai Dihitung
     *
     * @return
     */
    private int getReturnPayment(int cash, int subtotal) {
        return cash - subtotal;
    }

    /**
     * Jika Uang Tunai Tidak Ada, Maka Terjadi Kembalian Null. Jika Ada, Maka
     * Akan Menghitung Hasil Dan Menampilkan Dalam Dialog
     */
    private void calculatePayment() {
        if (txtUangTunai.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Uang Tunai Tidak Ada"
                    + "\nSilakan Masukan Uang Tunai Dahulu, Kemudian Klik Tombol Panah Down", "Informasi", JOptionPane.INFORMATION_MESSAGE);
        } else if (getMoneyCash() < getSubtotal()) {
            JOptionPane.showMessageDialog(null, "Maaf.\nUang Tunai Tidak Mencukupi Pembayaran Ini...");
        } else {
            try {
                int a = getMoneyCash(), b = getSubtotal();
                JLabel label = new JLabel("Rp. " + decimalFormat.format(getReturnPayment(a, b)));
                label.setFont(new java.awt.Font("Liberation Sans", 0, 100));
                label.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
                JOptionPane.showMessageDialog(null, label, "Uang Kembalian Anda", JOptionPane.PLAIN_MESSAGE);
            } catch (NumberFormatException ex) {
            }
        }
    }

    private int getItemFreight() {
        int freight = 0;
        for (int i = 0; i < jTable1.getRowCount(); i++) {
            freight = freight + Integer.parseInt(jTable1.getValueAt(i, 2).toString());
        }
        return freight;
    }

    /**
     * Method Ini Digunakan Ketika User Meng-Klik Tombol Ok, Dan textField tsb
     * akan terhapus seperti semula
     */
    private void clearField() {
        txtSubtotal.setText(decimalFormat.format(getSubtotal()));
        txtIdBarang.setText("");
        System.out.println(getItemFreight());
        getItemFreight();
        txtNamaBarang.setText("");
        txtStok.setText("");
        txtHargaJual.setText("");
        txtQty.setText("");
    }

    private void updateStockOut() {
        try {
            String sql = "Update Products Set StockOut = ? Where ProductID = ?";
            pst = conn.prepareStatement(sql);
            for (int i = 0; i < jTable1.getRowCount(); i++) {
                int oldValue = Integer.parseInt(jTable1.getValueAt(i, 2).toString());
                String idStock = jTable1.getValueAt(i, 0).toString();
                pst.setInt(1, oldValue);
                pst.setString(2, idStock);
                pst.executeUpdate();
            }
            pst.addBatch();
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Terjadi Error Pada:\n" + ex.toString(), "Kesalahan", JOptionPane.ERROR_MESSAGE);
        }
    }

    private void selectCustomers() {
        try {
            SelectCustomers sp = new SelectCustomers(null, true);
            sp.setVisible(true);
            int b = sp.jTable1.getSelectedRow();
            String id = (String) sp.jTable1.getValueAt(b, 0);
            String nama = (String) sp.jTable1.getValueAt(b, 1);
            String kontak = (String) sp.jTable1.getValueAt(b, 6);
            custID = Integer.parseInt(id);
            txtIdCust.setText(id);
            txtNamaCust.setText(nama);
            txtKontakCust.setText(kontak);
            sp.dispose();
        } catch (ArrayIndexOutOfBoundsException e) {
            //JOptionPane.showMessageDialog(null, "Terjadi Error :\n"+e.toString(),"Kesalahan",JOptionPane.ERROR_MESSAGE);
        }
    }

    private void printInvoices() {
        String filePath = System.getProperty("user.dir") + "/src/com/resources/jrxml/Invoices.jrxml";
        String hashKey = "SaleID";
        String hashValue = txtNoStruk.getText();
        Printable.printInvoices(hashKey, hashValue, filePath, conn);
    }

    /**
     * Autentikasi Pembayaran, Jika User Yakin Dengan Daftar Barang Yang Dibeli,
     * Maka Sistem Akan Menyimpan Data Transaksi Dan Meload Struk
     */
    private void authPayment() {
        if (txtSubtotal.getText().equalsIgnoreCase("0.00")) {
            JOptionPane.showMessageDialog(null, "Subtotal Penjualan Tidak Ada..", "Perhatian", JOptionPane.WARNING_MESSAGE);
        } else if (txtUangTunai.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Uang Tunai Tidak Ada..", "Perhatian", JOptionPane.WARNING_MESSAGE);
            txtUangTunai.requestFocus();
        } else if (txtKasir.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Kasir Tidak Ada..", "Perhatian", JOptionPane.WARNING_MESSAGE);
        } else if (txtNamaCust.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Pelanggan Tidak Ada..", "Perhatian", JOptionPane.WARNING_MESSAGE);
            jButton3.requestFocus();
        } else {
            saveDataPayment();
            //        printInvoices();
            openForms();
            jButton9.setEnabled(true);
        }
    }

    /**
     * Ini Digunakan Untuk Membuat Jam Digital
     */
    private void timerStart() {
        Timer updateTimer;
        int delay = 100;
        updateTimer = new Timer(delay, new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                Date currentTime = new Date();
                String formatTimeStr = "HH:mm:ss z";
                DateFormat formatTime = new SimpleDateFormat(formatTimeStr);
                String formattedTimeStr = formatTime.format(currentTime);
                jLabel1.setText("Pukul : " + formattedTimeStr);
                //setTitle("CV. Kharisma | Penjualan Buku | " + txtKasir.getText() + " | " + formattedTimeStr);
            }
        });
        updateTimer.start();
    }

    /**
     * Untuk Logout Dan Mengganti Admin
     *
     */
    private void logOut() {
        SelectCashier cs = new SelectCashier(null, true);
        this.setVisible(false);
        cs.jComboBox2.setSelectedItem("Penjualan Barang");
        cs.setVisible(true);
    }

    private void minusOption() {

    }

    private void plusOption() {
        try {
            int xr = jTable1.getSelectedRow();
            DefaultTableModel mod = (DefaultTableModel) jTable1.getModel();
            if (xr >= 0) {
                mod.setValueAt(1, xr, 2);
                txtSubtotal.setText(decimalFormat.format(getSubtotal()));
            }

        } catch (ArrayIndexOutOfBoundsException e) {
            System.out.println(e.getMessage());
        }
    }

    private void cancelOption() {
        try {
            DefaultTableModel mod = (DefaultTableModel) jTable1.getModel();
            mod.removeRow(jTable1.getSelectedRow());
            txtSubtotal.setText(decimalFormat.format(getSubtotal()));
        } catch (ArrayIndexOutOfBoundsException e) {
        }
    }

}
