/*
 * Copyright (C) 2020 flash
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
package com.pointofsales.swing.manager;

import com.pointofsales.config.aom.Characters;
import com.pointofsales.config.controller.CProduct;
import com.pointofsales.config.database.ConfigDB;
import java.awt.HeadlessException;
import java.awt.Image;
import java.io.File;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author flash
 */
public class ViewProducts extends javax.swing.JDialog {

    /**
     * Creates new form ViewProducts
     *
     * @param parent
     * @param modal
     */
    public ViewProducts(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        conn = new ConfigDB().getConnection();
        initForms();
        showSuppliersCompanyName();
        showUnitItem();

    }
    private final SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
    private final Connection conn;
    private PreparedStatement pst;
    private ResultSet rs;
    private final CProduct product = new CProduct();
    private String url;

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPopupMenu1 = new javax.swing.JPopupMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        txtBarcode = new javax.swing.JTextField();
        txtNmItems = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtHBeli = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtHJual = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txtStokMin = new javax.swing.JTextField();
        txtNetto = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        cmbSatuan = new javax.swing.JComboBox<String>();
        cmbSupplier = new javax.swing.JComboBox<String>();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jXDatePicker1 = new org.jdesktop.swingx.JXDatePicker();
        jLabelFoto = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jTextField1 = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jButton1 = new javax.swing.JButton();
        jButtonHapus = new javax.swing.JButton();
        jButtonEdit = new javax.swing.JButton();
        jButtonSimpan = new javax.swing.JButton();

        jMenuItem1.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jMenuItem1.setText("Cari Foto");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jPopupMenu1.add(jMenuItem1);

        jMenuItem2.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jMenuItem2.setText("Hapus");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jPopupMenu1.add(jMenuItem2);

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jTabbedPane1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel1.setFont(new java.awt.Font("Liberation Sans", 0, 12)); // NOI18N

        jLabel3.setFont(new java.awt.Font("Liberation Sans", 0, 14)); // NOI18N
        jLabel3.setText("Barcode :");

        txtBarcode.setFont(new java.awt.Font("Liberation Sans", 0, 14)); // NOI18N
        txtBarcode.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtBarcodeKeyTyped(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtBarcodeKeyReleased(evt);
            }
        });

        txtNmItems.setFont(new java.awt.Font("Liberation Sans", 0, 14)); // NOI18N

        jLabel4.setFont(new java.awt.Font("Liberation Sans", 0, 14)); // NOI18N
        jLabel4.setText("Nama Barang :");

        txtHBeli.setFont(new java.awt.Font("Liberation Sans", 0, 14)); // NOI18N
        txtHBeli.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtHBeliKeyTyped(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Liberation Sans", 0, 14)); // NOI18N
        jLabel5.setText("Harga Beli :");

        txtHJual.setFont(new java.awt.Font("Liberation Sans", 0, 14)); // NOI18N
        txtHJual.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtHJualKeyTyped(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Liberation Sans", 0, 14)); // NOI18N
        jLabel6.setText("Harga Jual :");

        txtStokMin.setFont(new java.awt.Font("Liberation Sans", 0, 14)); // NOI18N
        txtStokMin.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtStokMinKeyTyped(evt);
            }
        });

        txtNetto.setFont(new java.awt.Font("Liberation Sans", 0, 14)); // NOI18N

        jLabel7.setFont(new java.awt.Font("Liberation Sans", 0, 14)); // NOI18N
        jLabel7.setText("Berat Bersih/Netto :");

        jLabel8.setFont(new java.awt.Font("Liberation Sans", 0, 14)); // NOI18N
        jLabel8.setText("Stok Barang :");

        jLabel9.setFont(new java.awt.Font("Liberation Sans", 0, 14)); // NOI18N
        jLabel9.setText("Satuan :");

        cmbSatuan.setFont(new java.awt.Font("Liberation Sans", 0, 14)); // NOI18N
        cmbSatuan.setMaximumRowCount(5);
        cmbSatuan.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "<Pilih Satuan>" }));
        cmbSatuan.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
                cmbSatuanPopupMenuWillBecomeInvisible(evt);
            }
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
        });

        cmbSupplier.setFont(new java.awt.Font("Liberation Sans", 0, 14)); // NOI18N
        cmbSupplier.setMaximumRowCount(5);
        cmbSupplier.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "<Pilih Supplier>" }));
        cmbSupplier.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
                cmbSupplierPopupMenuWillBecomeInvisible(evt);
            }
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
        });

        jLabel10.setFont(new java.awt.Font("Liberation Sans", 0, 14)); // NOI18N
        jLabel10.setText("Supplier :");

        jLabel11.setFont(new java.awt.Font("Liberation Sans", 0, 14)); // NOI18N
        jLabel11.setText("Tgl. Kadaluarsa :");

        jXDatePicker1.setFont(new java.awt.Font("Liberation Sans", 0, 14)); // NOI18N

        jLabelFoto.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelFoto.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jLabelFoto.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabelFotoMouseClicked(evt);
            }
        });

        jButton2.setText("Cari Foto");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Hapus Foto");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4)
                            .addComponent(jLabel6)
                            .addComponent(jLabel7)
                            .addComponent(jLabel8)
                            .addComponent(jLabel9)
                            .addComponent(jLabel11))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jXDatePicker1, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(txtBarcode, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(txtNmItems, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(txtHJual, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(txtHBeli, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(txtNetto, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(txtStokMin, javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addComponent(cmbSatuan, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(jLabel10)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(cmbSupplier, javax.swing.GroupLayout.PREFERRED_SIZE, 303, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabelFoto, javax.swing.GroupLayout.DEFAULT_SIZE, 209, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jButton2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton3)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(txtBarcode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(txtNmItems, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(txtHJual, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(txtHBeli, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(txtNetto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(txtStokMin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9)
                            .addComponent(cmbSatuan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cmbSupplier, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel10)))
                    .addComponent(jLabelFoto, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jXDatePicker1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11)
                    .addComponent(jButton2)
                    .addComponent(jButton3))
                .addContainerGap(119, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Entry Data", jPanel1);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTable1.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jTextField1.setFont(new java.awt.Font("Liberation Sans", 0, 12)); // NOI18N
        jTextField1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextField1KeyReleased(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Liberation Sans", 0, 12)); // NOI18N
        jLabel2.setText("Cari Data :");

        jLabel12.setFont(new java.awt.Font("Liberation Sans", 0, 12)); // NOI18N
        jLabel12.setText("jLabel12");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 941, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 340, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 302, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel12))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 338, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(81, 81, 81))
        );

        jTabbedPane1.addTab("View Data", jPanel2);

        jLabel1.setFont(new java.awt.Font("Liberation Sans", 0, 36)); // NOI18N
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/resources/icon/icons8-product-48.png"))); // NOI18N
        jLabel1.setText("Data Produk/Barang");

        jSeparator1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));

        jButton1.setFont(new java.awt.Font("Liberation Sans", 0, 16)); // NOI18N
        jButton1.setText("Keluar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButtonHapus.setFont(new java.awt.Font("Liberation Sans", 0, 16)); // NOI18N
        jButtonHapus.setText("Hapus");
        jButtonHapus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonHapusActionPerformed(evt);
            }
        });

        jButtonEdit.setFont(new java.awt.Font("Liberation Sans", 0, 16)); // NOI18N
        jButtonEdit.setText("Edit");
        jButtonEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEditActionPerformed(evt);
            }
        });

        jButtonSimpan.setFont(new java.awt.Font("Liberation Sans", 0, 16)); // NOI18N
        jButtonSimpan.setText("Simpan");
        jButtonSimpan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSimpanActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 628, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addComponent(jSeparator1)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButtonSimpan, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonEdit, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonHapus, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(37, 37, 37))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addGap(9, 9, 9)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 414, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonHapus)
                    .addComponent(jButtonEdit)
                    .addComponent(jButtonSimpan)
                    .addComponent(jButton1))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        if (jButton1.getText().equalsIgnoreCase("Batal")) {
            initForms();
        } else {
            int questions = JOptionPane.showConfirmDialog(null, "Keluar Dari Menu Ini..?", "Perhatian", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
            if (questions == JOptionPane.YES_OPTION) {
                this.dispose();
            }
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButtonHapusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonHapusActionPerformed
        if (jTable1.getSelectedRow() == -1) {
            JOptionPane.showMessageDialog(this, "Maaf, Data Tidak Ada\nSilakan Pilih Data Produk Dahulu Pada Tabel Di Tab View.");
        } else {
            int questions = JOptionPane.showConfirmDialog(null, "Apakah Produk " + jTable1.getValueAt(jTable1.getSelectedRow(), 2)
                    .toString()
                    .toUpperCase() + " Ini Akan Dihapus..?",
                    "Perhatian", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
            if (questions == JOptionPane.YES_OPTION) {
                product.deleteItem((String) jTable1.getValueAt(jTable1.getSelectedRow(), 0));
                initForms();
                JOptionPane.showMessageDialog(null, "Data Berhasil Disimpan", "Info", JOptionPane.INFORMATION_MESSAGE);
            }
        }
    }//GEN-LAST:event_jButtonHapusActionPerformed

    private void jButtonEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEditActionPerformed
        if (jButtonEdit.getText().equalsIgnoreCase("Edit")) {
            jButtonEdit.setText("Simpan");
            activatedField();
            jButtonSimpan.setEnabled(false);
            jButtonHapus.setEnabled(false);
            jButton1.setText("Batal");
        } else {
            editProduct();
        }
    }//GEN-LAST:event_jButtonEditActionPerformed

    private void jButtonSimpanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSimpanActionPerformed
        if (jButtonSimpan.getText().equalsIgnoreCase("Baru")) {
            jButtonSimpan.setText("Simpan");
            activatedField();
            clearField();
            jButtonEdit.setEnabled(false);
            jButtonHapus.setEnabled(false);
            jButton1.setText("Batal");
        } else {
            addProduct();
        }
    }//GEN-LAST:event_jButtonSimpanActionPerformed

    private void cmbSatuanPopupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_cmbSatuanPopupMenuWillBecomeInvisible
        getUnitID();
    }//GEN-LAST:event_cmbSatuanPopupMenuWillBecomeInvisible

    private void cmbSupplierPopupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_cmbSupplierPopupMenuWillBecomeInvisible
        getSupplierID();
    }//GEN-LAST:event_cmbSupplierPopupMenuWillBecomeInvisible

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        try {
            int x = jTable1.getSelectedRow();
            String sql = "Select * From Products Where ProductID = ?";
            pst = conn.prepareStatement(sql);
            pst.setString(1, (String) jTable1.getValueAt(x, 0));
            rs = pst.executeQuery();
            if (rs.next()) {
                txtStokMin.setText(rs.getString(7));
                txtHBeli.setText(rs.getString(5));
                txtHJual.setText(rs.getString(4));
                txtNmItems.setText(rs.getString(3));
                cmbSatuan.setSelectedItem(jTable1.getValueAt(jTable1.getSelectedRow(), 7));
                txtBarcode.setText(rs.getString(2));
                txtNetto.setText(rs.getString(6));
                cmbSupplier.setSelectedItem(jTable1.getValueAt(jTable1.getSelectedRow(), 8));
                Date date = dateFormat.parse(rs.getString(10));
                jXDatePicker1.setDate(date);
                getUnitID();
                getSupplierID();
            }
        } catch (SQLException | ParseException ex) {
            JOptionPane.showMessageDialog(null, "Terjadi Error Pada: \n" + ex.toString(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jTable1MouseClicked

    private void jTextField1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField1KeyReleased
        product.searchData(jTextField1.getText());
        tableRenderer();
    }//GEN-LAST:event_jTextField1KeyReleased

    private void txtBarcodeKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBarcodeKeyReleased
        String lengthValue = txtBarcode.getText();
        if (lengthValue.length() > 13) {
            JOptionPane.showMessageDialog(null, "Jika Anda Menggunakan Barcode Tipe EAN13,"
                    + "\nMaka Anda Harus Menulis Sampai 13 Digit Angka.....\nDan"
                    + "\nJika Anda Menggunakan Barcode Tipe EAN8,"
                    + "\nMaka Anda Harus Menulis Sampai 8 Digit Angka.....");
        }
    }//GEN-LAST:event_txtBarcodeKeyReleased

    private void txtBarcodeKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBarcodeKeyTyped
        Characters.setDontWriteCharactersExceptNumber(evt);
    }//GEN-LAST:event_txtBarcodeKeyTyped

    private void txtHJualKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtHJualKeyTyped
        Characters.setDontWriteCharactersExceptNumber(evt);
    }//GEN-LAST:event_txtHJualKeyTyped

    private void txtHBeliKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtHBeliKeyTyped
        Characters.setDontWriteCharactersExceptNumber(evt);
    }//GEN-LAST:event_txtHBeliKeyTyped

    private void txtStokMinKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtStokMinKeyTyped
        Characters.setDontWriteCharactersExceptNumber(evt);
    }//GEN-LAST:event_txtStokMinKeyTyped

    private void jLabelFotoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelFotoMouseClicked
        if (javax.swing.SwingUtilities.isRightMouseButton(evt)) {
            jPopupMenu1.show(evt.getComponent(), evt.getX(), evt.getY());
        }
    }//GEN-LAST:event_jLabelFotoMouseClicked

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        getCariDanLokasiFoto();
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        jLabelFoto.setIcon(null);
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        getCariDanLokasiFoto();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        jLabelFoto.setIcon(null);
    }//GEN-LAST:event_jButton3ActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    protected javax.swing.JComboBox<String> cmbSatuan;
    protected javax.swing.JComboBox<String> cmbSupplier;
    protected javax.swing.JButton jButton1;
    protected javax.swing.JButton jButton2;
    protected javax.swing.JButton jButton3;
    protected javax.swing.JButton jButtonEdit;
    protected javax.swing.JButton jButtonHapus;
    protected javax.swing.JButton jButtonSimpan;
    protected javax.swing.JLabel jLabel1;
    protected javax.swing.JLabel jLabel10;
    protected javax.swing.JLabel jLabel11;
    protected javax.swing.JLabel jLabel12;
    protected javax.swing.JLabel jLabel2;
    protected javax.swing.JLabel jLabel3;
    protected javax.swing.JLabel jLabel4;
    protected javax.swing.JLabel jLabel5;
    protected javax.swing.JLabel jLabel6;
    protected javax.swing.JLabel jLabel7;
    protected javax.swing.JLabel jLabel8;
    protected javax.swing.JLabel jLabel9;
    protected javax.swing.JLabel jLabelFoto;
    protected javax.swing.JMenuItem jMenuItem1;
    protected javax.swing.JMenuItem jMenuItem2;
    protected javax.swing.JPanel jPanel1;
    protected javax.swing.JPanel jPanel2;
    protected javax.swing.JPopupMenu jPopupMenu1;
    protected javax.swing.JScrollPane jScrollPane1;
    protected javax.swing.JSeparator jSeparator1;
    protected javax.swing.JTabbedPane jTabbedPane1;
    protected javax.swing.JTable jTable1;
    protected javax.swing.JTextField jTextField1;
    protected org.jdesktop.swingx.JXDatePicker jXDatePicker1;
    protected javax.swing.JTextField txtBarcode;
    protected javax.swing.JTextField txtHBeli;
    protected javax.swing.JTextField txtHJual;
    protected javax.swing.JTextField txtNetto;
    protected javax.swing.JTextField txtNmItems;
    protected javax.swing.JTextField txtStokMin;
    // End of variables declaration//GEN-END:variables

    private void activatedField() {
        txtBarcode.setEnabled(true);
        txtNetto.setEnabled(true);
        cmbSatuan.setEnabled(true);
        jXDatePicker1.setEnabled(true);
        txtHBeli.setEnabled(true);
        txtStokMin.setEnabled(true);
        txtHJual.setEnabled(true);
        txtNmItems.setEnabled(true);
        cmbSatuan.setEnabled(true);
        cmbSupplier.setEnabled(true);
        cmbSatuan.setEnabled(true);
        cmbSupplier.setEnabled(true);
    }

    private void clearField() {
        txtBarcode.setText("");
        txtNetto.setText("");
        cmbSatuan.setSelectedItem("");
        jXDatePicker1.setDate(null);
        txtHBeli.setText("");
        txtStokMin.setText("");
        txtHJual.setText("");
        txtNmItems.setText("");
        cmbSatuan.setSelectedItem("<Pilih Satuan>");
        cmbSupplier.setSelectedItem("<Pilih Supplier>");
    }

    private void showSuppliersCompanyName() {
        try {
            String sql = "SELECT SupID,CompanyName FROM Suppliers";
            pst = conn.prepareStatement(sql);
            rs = pst.executeQuery();
            while (rs.next()) {
                cmbSupplier.addItem(rs.getString(2));
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Terjadi Error Pada: \n" + ex.toString(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }

    private int getSupplierID() {
        int supplierID = 0;
        try {
            String sql = "SELECT * FROM Suppliers WHERE CompanyName = ?";
            pst = conn.prepareStatement(sql);
            pst.setString(1, (String) cmbSupplier.getSelectedItem());
            rs = pst.executeQuery();
            if (rs.next()) {
                supplierID = rs.getInt(1);
                System.out.println(supplierID + " " + rs.getString(2));
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Terjadi Error Pada: \n" + ex.toString(), "Error", JOptionPane.ERROR_MESSAGE);
        }
        return supplierID;
    }

    private String getImageAndURL() {
        String urlPath = null;
        try {
            JFileChooser fileChooser = new JFileChooser();
            fileChooser.setDialogTitle("Cari Foto Produk/Barang");
            fileChooser.showOpenDialog(this);
            fileChooser.setCurrentDirectory(new File(System.getProperty("user.home")));
            FileNameExtensionFilter filter = new FileNameExtensionFilter("*.FOTO", ".jpg", ".png", ".gif");
            fileChooser.addChoosableFileFilter(filter);
            int result = fileChooser.showSaveDialog(this);
            if (result == JFileChooser.APPROVE_OPTION) {
                File selectedFile = fileChooser.getSelectedFile();
                urlPath = selectedFile.getAbsolutePath();
                System.out.println(urlPath);
                jLabel12.setIcon(new javax.swing.ImageIcon(urlPath));
            } else if (result == JFileChooser.CANCEL_OPTION) {
                JOptionPane.showMessageDialog(null, "Data Tidak Dipilih");
                jLabel12.setIcon(null);
            }
        } catch (HeadlessException ex) {
            JOptionPane.showMessageDialog(null, "Terjadi Error Pada: \n" + ex.toString(), "Error", JOptionPane.ERROR_MESSAGE);
        }
        return urlPath;
    }

    private int getUnitID() {
        int unitID = 0;
        try {
            String sql = "SELECT * FROM ProdUnit WHERE UnitName =?";
            pst = conn.prepareStatement(sql);
            pst.setString(1, (String) cmbSatuan.getSelectedItem());
            rs = pst.executeQuery();
            if (rs.next()) {
                unitID = rs.getInt(1);
                System.out.println(unitID + " " + rs.getString(2));
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Terjadi Error Pada: \n" + ex.toString(), "Error", JOptionPane.ERROR_MESSAGE);
        }
        return unitID;
    }

    private void showUnitItem() {
        try {
            String sql = "SELECT * FROM ProdUnit";
            pst = conn.prepareStatement(sql);
            rs = pst.executeQuery();
            while (rs.next()) {
                cmbSatuan.addItem(rs.getString(2));
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Terjadi Error Pada: \n" + ex.toString(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }

    private void tableRenderer() {
        jTable1.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        jTable1.setFont(new java.awt.Font("Liberation Sans", 0, 14));
        jTable1.getTableHeader().setSize(20, 30);
        jTable1.setRowHeight(23);
        jTable1.getTableHeader().setFont(new java.awt.Font("Liberation Sans", 0, 14));
        jTable1.getColumnModel().getColumn(0).setPreferredWidth(50);
        jTable1.getColumnModel().getColumn(1).setPreferredWidth(125);
        jTable1.getColumnModel().getColumn(2).setPreferredWidth(290);
        jTable1.getColumnModel().getColumn(3).setPreferredWidth(125);
        jTable1.getColumnModel().getColumn(4).setPreferredWidth(125);
        jTable1.getColumnModel().getColumn(5).setPreferredWidth(100);
        jTable1.getColumnModel().getColumn(6).setPreferredWidth(80);
        jTable1.getColumnModel().getColumn(7).setPreferredWidth(100);
        jTable1.getColumnModel().getColumn(8).setPreferredWidth(370);
        jTable1.getColumnModel().getColumn(9).setPreferredWidth(120);
    }

    private void initForms() {
        jTable1.setModel(product.model);
        product.showDataProduct();
        tableRenderer();
        clearField();
        jButtonSimpan.setEnabled(true);
        jButtonEdit.setEnabled(true);
        jButtonHapus.setEnabled(true);
        jButton1.setEnabled(true);
        jButtonSimpan.setText("Baru");
        jButtonEdit.setText("Edit");
        jButtonHapus.setText("Hapus");
        jButton1.setText("Keluar");
        jLabel12.setText("Total Ada " + jTable1.getRowCount() + " Stok Barang");
        txtBarcode.setEnabled(false);
        txtNetto.setEnabled(false);
        cmbSatuan.setEnabled(false);
        jXDatePicker1.setEnabled(false);
        txtHBeli.setEnabled(false);
        txtStokMin.setEnabled(false);
        txtHJual.setEnabled(false);
        txtNmItems.setEnabled(false);
        cmbSatuan.setEnabled(false);
        cmbSupplier.setEnabled(false);
        cmbSatuan.setEnabled(false);
        cmbSupplier.setEnabled(false);
    }

    private void editProduct() {
        if (jTable1.getSelectedRow() == -1) {
            JOptionPane.showMessageDialog(this, "Maaf, Data Tidak Ada\nSilakan Pilih Data Produk Dahulu Pada Tabel Di Tab View.");
        } else if (txtNmItems.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Nama Barang Harus Diisi");
            txtNmItems.requestFocus();
        } else if (txtHJual.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Harga Jual Barang Harus Diisi");
            txtHJual.requestFocus();
        } else if (txtHBeli.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Harga Beli Barang Harus Diisi");
            txtHBeli.requestFocus();
        } else if (txtStokMin.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Stok Barang Harus Diisi");
            txtStokMin.requestFocus();
        } else if (cmbSatuan.getSelectedItem() == "<Pilih Data>") {
            JOptionPane.showMessageDialog(this, "Satuan Barang Harus Diisi");
            cmbSatuan.requestFocus();
        } else if (jXDatePicker1.getDate() == null) {
            JOptionPane.showMessageDialog(this, "Tgl. Kadaluarsa Barang Harus Diisi");
        } else {
            String pId = (String) jTable1.getValueAt(jTable1.getSelectedRow(), 0);
            String bCodeId = txtBarcode.getText();
            String pName = txtNmItems.getText();
            int sPrice = Integer.parseInt(txtHJual.getText());
            int cPrice = Integer.parseInt(txtHBeli.getText());
            String netto = txtNetto.getText();
            int unitID = getUnitID();
            int supplierID = getSupplierID();
            int stock = Integer.parseInt(txtStokMin.getText());
            String expDate = dateFormat.format(jXDatePicker1.getDate());
            product.updateData(bCodeId, pName, sPrice, cPrice, netto, stock, unitID, supplierID, expDate, pId);
            JOptionPane.showMessageDialog(null, "Data Berhasil Disimpan", "Info", JOptionPane.INFORMATION_MESSAGE);
            initForms();
        }
    }

    private void addProduct() {
        if (txtNmItems.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Nama Barang Harus Diisi");
            txtNmItems.requestFocus();
        } else if (txtHJual.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Harga Jual Barang Harus Diisi");
            txtHJual.requestFocus();
        } else if (txtHBeli.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Harga Beli Barang Harus Diisi");
            txtHBeli.requestFocus();
        } else if (txtStokMin.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Stok Barang Harus Diisi");
            txtStokMin.requestFocus();
        } else if (cmbSatuan.getSelectedItem() == "<Pilih Data>") {
            JOptionPane.showMessageDialog(this, "Satuan Barang Harus Diisi");
            cmbSatuan.requestFocus();
        } else if (jXDatePicker1.getDate() == null) {
            JOptionPane.showMessageDialog(this, "Tgl. Kadaluarsa Barang Harus Diisi");
        } else {
            String pId = null;
            String bCodeId = txtBarcode.getText();
            String pName = txtNmItems.getText();
            int sPrice = Integer.parseInt(txtHJual.getText());
            int cPrice = Integer.parseInt(txtHBeli.getText());
            String netto = txtNetto.getText();
            int unitID = getUnitID();
            int supplierID = getSupplierID();
            int stock = Integer.parseInt(txtStokMin.getText());
            String expDate = dateFormat.format(jXDatePicker1.getDate());
            product.addItem(pId, bCodeId, pName, sPrice, cPrice, netto, stock, unitID, supplierID, expDate);
            JOptionPane.showMessageDialog(null, "Data Berhasil Disimpan", "Info", JOptionPane.INFORMATION_MESSAGE);
            initForms();
        }
    }

    private String getCariDanLokasiFoto() {
        JFileChooser jfc = new JFileChooser();
        jfc.setCurrentDirectory(new File(System.getProperty("user.home")));
        FileNameExtensionFilter filter = new FileNameExtensionFilter("*Image", ".jpg", ".png");
        jfc.addChoosableFileFilter(filter);
        int res = jfc.showSaveDialog(null);
        if (res == JFileChooser.APPROVE_OPTION) {
            File file = jfc.getSelectedFile();
            String filePath = file.getAbsolutePath();
            //ImageIcon icon = new ImageIcon(new ImageIcon(filePath).getImage().getScaledInstance(350, 350, Image.SCALE_DEFAULT));
            ImageIcon icon = new ImageIcon(new ImageIcon(filePath).getImage().getScaledInstance(jLabelFoto.getWidth(), jLabelFoto.getHeight(), Image.SCALE_DEFAULT));
            jLabelFoto.setIcon(icon);
            url = filePath;
            System.out.println("" + url);
        } else if (res == JFileChooser.CANCEL_OPTION) {
            //JOptionPane.showMessageDialog(null, "Foto tidak ada");
            jLabelFoto.setIcon(null);
        }
        return url;
    }
}
